{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48],"program":"/Users/kiron/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","strsim","/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=09d3cba042ec1133","-C","extra-filename=-09d3cba042ec1133","--out-dir","/Users/kiron/Programing/Rust/rust_sample/ferris_watch/target/rls/debug/deps","-L","dependency=/Users/kiron/Programing/Rust/rust_sample/ferris_watch/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/kiron/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,107,105,114,111,110,47,80,114,111,103,114,97,109,105,110,103,47,82,117,115,116,47,114,117,115,116,95,115,97,109,112,108,101,47,102,101,114,114,105,115,95,119,97,116,99,104,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,115,116,114,115,105,109,45,48,57,100,51,99,98,97,48,52,50,101,99,49,49,51,51,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"strsim","disambiguator":[1115293529675462592,5862825394232903720]},"crate_root":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src","external_crates":[{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16640301315316927378,7972854394896530817]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14038314031480122223,18288762355054404375]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13783615950429575091,6219747102201232603]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[854612430498901336,10623564556663525382]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[17603376375282223352,7462339207631764177]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8679084529258068718,13043985629820283017]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[415584397920227883,13650777650689564563]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[1571227932806636233,8838271019708471569]}},{"file_name":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[14225965203940082476,1315780103252315530]}}],"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":18532,"line_start":1,"line_end":698,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":18532,"line_start":1,"line_end":698,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kiron/.cargo/registry/src/github.com-1ecc6299db9ec823/strsim-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":32},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28}],"decl_id":null,"docs":" This library implements string similarity metrics.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":21},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":184,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":24},"name":"DifferentLengthArgs","qualname":"::StrSimError::DifferentLengthArgs","value":"StrSimError::DifferentLengthArgs","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":166,"byte_end":177,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"StrSimError","qualname":"::StrSimError","value":"StrSimError::{DifferentLengthArgs}","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":216,"byte_end":229,"line_start":12,"line_end":12,"column_start":10,"column_end":23},"name":"HammingResult","qualname":"::HammingResult","value":"Result<usize, StrSimError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":601,"byte_end":608,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"hamming","qualname":"::hamming","value":"fn (a: &str, b: &str) -> HammingResult","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of positions in the two strings where the characters\n differ. Returns an error if the strings have different lengths.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1240,"byte_end":1244,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"jaro","qualname":"::jaro","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Jaro similarity between two strings. The returned value\n is between 0.0 and 1.0 (higher value means more similar).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3070,"byte_end":3082,"line_start":116,"line_end":116,"column_start":8,"column_end":20},"name":"jaro_winkler","qualname":"::jaro_winkler","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Like Jaro but gives a boost to strings that have a common prefix.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3838,"byte_end":3849,"line_start":143,"line_end":143,"column_start":8,"column_end":19},"name":"levenshtein","qualname":"::levenshtein","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculates the minimum number of insertions, deletions, and substitutions\n required to change one string into the other.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4810,"byte_end":4822,"line_start":182,"line_end":182,"column_start":8,"column_end":20},"name":"osa_distance","qualname":"::osa_distance","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Like Levenshtein but allows for adjacent transpositions. Each substring can\n only be edited once.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":[47,85,115,101,114,115,47,107,105,114,111,110,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,115,105,109,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6616,"byte_end":6635,"line_start":236,"line_end":236,"column_start":8,"column_end":27},"name":"damerau_levenshtein","qualname":"::damerau_levenshtein","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Like optimal string alignment, but substrings can be edited an unlimited\n number of times, and the triangle inequality holds.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}